@using Microsoft.AspNetCore.Identity
@inject SignInManager<IdentityUser> signInManager
@inject UserManager<IdentityUser> user
@model BlogPost.Web.Models.ViewModels.BlogPostRequest
@{
    ViewData["Title"] = Model.PageTitle;
}

<div class="container my-5">
    <div class="row justify-content-center">
        <div class="col-12 col-lg-6">
            @if (Model != null)
            {
                <h1 class="mb-3">@Model.Haeding</h1>
                <div class="d-flex justify-content-between mb-3">
                    <span class="text-secondary">@Model.Author</span>
                    <span class="text-secondary">@Model.PublishedDate.ToShortDateString()</span>
                </div>
                <div class="mb-3">
                    @if (signInManager.IsSignedIn(User))
                    {
                        @if (Model.Liked)
                        {
                            <a id="btnLike" style="cursor:pointer;">
                                <i class="bi bi-hand-thumbs-up"></i>
                            </a>

                        }
                        else
                        {
                            <a id="btnLike" style="cursor:pointer;">
                                <i class="bi bi-hand-thumbs-up-fill"></i>
                            </a>
                        }

                    }
                    <span id="totalLikes">@Model.TotalLikes</span> likes
                </div>
                <div class="mb-3 d-flex">
                    @foreach (var tag in Model.Tags)
                    {
                        <span class="badge bg-secondary me-1">@tag.Name</span>
                    }
                </div>
                <img src="@Model.ImageURL" class="d-block img-fluid mb-3" />
                <div class="mb-3 blog-content">
                    @Html.Raw(@Model.Content)
                </div>

                <div class="card">
                    <div class="card-header">
                        <h5>Comments</h5>
                        @if (signInManager.IsSignedIn(User))
                        {
                            <form method="post">
                                <div class="mb-3">
                                    <label class="form-label">Comment Description</label>
                                    <input type="text" class="form-control" asp-for="@Model.Comments"/>
                                </div>
                                <div class="mb-3">
                                    <button type="submit" class="btn btn-dark">Submit</button>
                                    <input type="hidden" asp-for="@Model.URLHandler" />
                                    <input type="hidden" asp-for="@Model.Id" />
                                </div>
                            </form>
                        }
                    </div>
                    <div class="card-body">
                        @if(Model.BlogComments!=null && Model.BlogComments.Any())
                        {
                            @foreach(var comment in Model.BlogComments)
                            {
                                <div class="card mb-3">
                                    <div class="card">
                                        <div>
                                            @comment.CommentDescription
                                        </div>
                                        <div class="d-flex justify-content-between">
                                            <span class="text-secondary">@comment.UserName</span>
                                            <span class="text-secondary">@comment.DateAdded.ToShortDateString()</span>
                                        </div>
                                        </div>
                                </div>
                            }
                           
                        }
                       

                    </div>
                    </div>

                    }
                    else
                    {
                    <p>Blog not Found!!</p>
                    }
                </div>
            </div>

        </div>

                @section Scripts{
        <script>
            const likeId = document.getElementById('btnLike');
            const totalLikesElement = document.getElementById('totalLikes');

            async function getTotalLikes() {
                fetch('api/AddLike/@Model.Id/totalLikes', {
                    method: 'GET',
                    headers: {
                        'Content-Type': 'application/json',
                        'Accept': '*/*'
                    }
                }).then(console.log("finish methoed"))
                    .then(data => data.json())
                    .then(result => totalLikesElement.innerHTML = result);
            }


            async function addLikeForBlog() {
                fetch('/api/AddLike/Add', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'Accept': '*/*'
                    },
                    body: JSON.stringify({
                        blogPostId: '@Model.Id',
                        userId: '@user.GetUserId(User)'
                    })
                }).then(console.log("as"))
                    .then(() => {
                        likeId.innerHTML = '<i class="bi bi-hand-thumbs-up-fill"></i>';
                        likeId.removeEventListener('click', addLikeForBlog);
                        getTotalLikes();
                    });

            }

            likeId.addEventListener('click', addLikeForBlog);
        </script>
    }
